###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     24/Feb/2014  19:26:42 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\stm32\BLDC PMSM2\src\stm32f10x_MCdac.c                #
#    Command line =  "D:\stm32\BLDC PMSM2\src\stm32f10x_MCdac.c" -D           #
#                    VECT_TAB_FLASH -lCN "D:\stm32\BLDC                       #
#                    PMSM2\EWARM\Debug\List\" --diag_error Pe068,Pe069 -o     #
#                    "D:\stm32\BLDC PMSM2\EWARM\Debug\Obj\" --debug           #
#                    --endian=little --cpu=Cortex-M3 --fpu=None               #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.4\arm\INC\c\DLib_Config_Normal.h" -I         #
#                    "D:\stm32\BLDC PMSM2\EWARM\..\" -I "D:\stm32\BLDC        #
#                    PMSM2\EWARM\..\..\STM32F10XFWLIB\inc\" -I                #
#                    "D:\stm32\BLDC PMSM2\EWARM\..\inc\" -Ohs                 #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  D:\stm32\BLDC PMSM2\EWARM\Debug\List\stm32f10x_MCdac.lst #
#    Object file  =  D:\stm32\BLDC PMSM2\EWARM\Debug\Obj\stm32f10x_MCdac.o    #
#                                                                             #
#                                                                             #
###############################################################################

D:\stm32\BLDC PMSM2\src\stm32f10x_MCdac.c
      1          /******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
      2          * File Name          : stm32f10x_MCdac.c
      3          * Author             : IMS Systems Lab 
      4          * Date First Issued  : 07/06/07
      5          * Description        : This module manages all the necessary function to 
      6          *                      implement DAC functionality
      7          ********************************************************************************
      8          * History:
      9          * 28/11/07 v1.0
     10          * 29/05/08 v2.0
     11          ********************************************************************************
     12          * THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     13          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
     14          * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
     15          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
     16          * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
     17          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     18          *
     19          * THIS SOURCE CODE IS PROTECTED BY A LICENSE.
     20          * FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED
     21          * IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
     22          *******************************************************************************/
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "stm32f10x_lib.h"
     26          #include "stm32f10x_MClib.h"
     27          #include "MC_Globals.h"
     28          #include "stm32f10x_MCdac.h"
     29          
     30          /* Private typedef -----------------------------------------------------------*/
     31          /* Private define ------------------------------------------------------------*/
     32          /* Private macro -------------------------------------------------------------*/
     33          /* Private function prototypes -----------------------------------------------*/
     34          
     35          /* Private variables ---------------------------------------------------------*/

   \                                 In section .data, align 4
     36          s16 hMeasurementArray[23];
     37          
     38          u8 *OutputVariableNames[23] ={
     39            "0                   ","Ia                  ","Ib                  ",
     40            "Ialpha              ","Ibeta               ","Iq                  ",
     41            "Id                  ","Iq ref              ","Id ref              ",
     42            "Vq                  ","Vd                  ","Valpha              ",
     43            "Vbeta               ","Measured El Angle   ","Measured Rotor Speed",
     44            "Observed El Angle   ","Observed Rotor Speed","Observed Ialpha     ",
     45            "Observed Ibeta      ","Observed B-emf alpha","Observed B-emf beta ",
     46            "User 1              ","User 2              "};
     47          
     48          #if (defined ENCODER || defined VIEW_ENCODER_FEEDBACK || defined HALL_SENSORS\
     49            || defined VIEW_HALL_FEEDBACK) && (defined NO_SPEED_SENSORS ||\
     50            defined OBSERVER_GAIN_TUNING)
     51          
     52          u8 OutputVar[23]={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22};
     53          u8 max_out_var_num = 22;
     54          
     55          #elif (defined NO_SPEED_SENSORS)
     56          u8 OutputVar[21]={0,1,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22};
     57          u8 max_out_var_num = 20;
   \                     max_out_var_num:
   \   00000000   0x14               DC8 20
     58          
     59          #elif (defined ENCODER || defined HALL_SENSORS)
     60          u8 OutputVar[17]={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,21,22};
     61          u8 max_out_var_num = 16;
     62          #endif
     63          
     64          u8 bChannel_1_variable=1;
   \                     bChannel_1_variable:
   \   00000001   0x01               DC8 1
     65          u8 bChannel_2_variable=1;
   \                     bChannel_2_variable:
   \   00000002   0x01               DC8 1
   \   00000003   0x00               DC8 0
   \                     hMeasurementArray:
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \                     OutputVariableNames:
   \   00000034   0x........         DC32 `?<Constant "0                   ">`
   \   00000038   0x........         DC32 `?<Constant "Ia                  ">`
   \   0000003C   0x........         DC32 `?<Constant "Ib                  ">`
   \   00000040   0x........         DC32 `?<Constant "Ialpha              ">`
   \   00000044   0x........         DC32 `?<Constant "Ibeta               ">`
   \   00000048   0x........         DC32 `?<Constant "Iq                  ">`
   \   0000004C   0x........         DC32 `?<Constant "Id                  ">`
   \   00000050   0x........         DC32 `?<Constant "Iq ref              ">`
   \   00000054   0x........         DC32 `?<Constant "Id ref              ">`
   \   00000058   0x........         DC32 `?<Constant "Vq                  ">`
   \   0000005C   0x........         DC32 `?<Constant "Vd                  ">`
   \   00000060   0x........         DC32 `?<Constant "Valpha              ">`
   \   00000064   0x........         DC32 `?<Constant "Vbeta               ">`
   \   00000068   0x........         DC32 `?<Constant "Measured El Angle   ">`
   \   0000006C   0x........         DC32 `?<Constant "Measured Rotor Speed">`
   \   00000070   0x........         DC32 `?<Constant "Observed El Angle   ">`
   \   00000074   0x........         DC32 `?<Constant "Observed Rotor Speed">`
   \   00000078   0x........         DC32 `?<Constant "Observed Ialpha     ">`
   \   0000007C   0x........         DC32 `?<Constant "Observed Ibeta      ">`
   \   00000080   0x........         DC32 `?<Constant "Observed B-emf alpha">`
   \   00000084   0x........         DC32 `?<Constant "Observed B-emf beta ">`
   \   00000088   0x........         DC32 `?<Constant "User 1              ">`
   \   0000008C   0x........         DC32 `?<Constant "User 2              ">`
   \                     OutputVar:
   \   00000090   0x00 0x01          DC8 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20
   \              0x02 0x03    
   \              0x04 0x05    
   \              0x06 0x07    
   \              0x08 0x09    
   \              0x0A 0x0B    
   \              0x0C 0x0F    
   \              0x10 0x11    
   \              0x12 0x13    
   \              0x14         
   \   000000A3   0x15 0x16          DC8 21, 22, 0, 0, 0
   \              0x00 0x00    
   \              0x00         
     66          
     67          /*******************************************************************************
     68          * Function Name : MCDAC_Configuration
     69          * Description : provides a short description of the function
     70          * Input : details the input parameters.
     71          * Output : details the output parameters.
     72          * Return : details the return value.
     73          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     74          void MCDAC_Init (void)
     75          {
   \                     MCDAC_Init:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
     76            TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
     77            GPIO_InitTypeDef GPIO_InitStructure; 
     78            TIM_OCInitTypeDef TIM_OCInitStructure;
     79            
     80            /* Enable GPIOB */
     81            RCC_APB2PeriphClockCmd( RCC_APB2Periph_GPIOB, ENABLE);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2008             MOVS     R0,#+8
   \   00000008   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     82          
     83            GPIO_StructInit(&GPIO_InitStructure);
   \   0000000C   0xA800             ADD      R0,SP,#+0
   \   0000000E   0x.... 0x....      BL       GPIO_StructInit
     84           
     85            /* Configure PB.00 as alternate function output */
     86            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
   \   00000012   0x2003             MOVS     R0,#+3
   \   00000014   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     87            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
   \   00000018   0x2018             MOVS     R0,#+24
   \   0000001A   0xF88D 0x0003      STRB     R0,[SP, #+3]
     88            GPIO_Init(GPIOB, &GPIO_InitStructure);
   \   0000001E   0xA900             ADD      R1,SP,#+0
   \   00000020   0x....             LDR.N    R0,??DataTable27  ;; 0x40010c00
   \   00000022   0x.... 0x....      BL       GPIO_Init
     89            
     90            /* Enable TIM3 clock */
     91            RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
   \   00000026   0x2101             MOVS     R1,#+1
   \   00000028   0x2002             MOVS     R0,#+2
   \   0000002A   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
     92          
     93            TIM_DeInit(TIM3);
   \   0000002E   0x....             LDR.N    R4,??DataTable27_1  ;; 0x40000400
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0x.... 0x....      BL       TIM_DeInit
     94          
     95            TIM_TimeBaseStructInit(&TIM_TimeBaseStructure);
   \   00000036   0xA805             ADD      R0,SP,#+20
   \   00000038   0x.... 0x....      BL       TIM_TimeBaseStructInit
     96          
     97            TIM_OCStructInit(&TIM_OCInitStructure);
   \   0000003C   0xA801             ADD      R0,SP,#+4
   \   0000003E   0x.... 0x....      BL       TIM_OCStructInit
     98            
     99            /* Time base configuration */
    100            TIM_TimeBaseStructure.TIM_Period = 0x800;          
   \   00000042   0xF44F 0x6000      MOV      R0,#+2048
   \   00000046   0xF8AD 0x0018      STRH     R0,[SP, #+24]
    101            TIM_TimeBaseStructure.TIM_Prescaler = 0x0;       
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x9005             STR      R0,[SP, #+20]
    102            TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;    
   \   0000004E   0xF8AD 0x001A      STRH     R0,[SP, #+26]
    103            TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;   
    104            TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);
   \   00000052   0xA905             ADD      R1,SP,#+20
   \   00000054   0x4620             MOV      R0,R4
   \   00000056   0x.... 0x....      BL       TIM_TimeBaseInit
    105          
    106            /* Output Compare PWM Mode configuration: Channel3 */
    107            TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1; 
   \   0000005A   0x2060             MOVS     R0,#+96
   \   0000005C   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    108            TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;                
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0xF8AD 0x0006      STRH     R0,[SP, #+6]
    109            TIM_OCInitStructure.TIM_Pulse = 0x400; //Dummy value;    
   \   00000066   0xF44F 0x6580      MOV      R5,#+1024
   \   0000006A   0xF8AD 0x500A      STRH     R5,[SP, #+10]
    110            TIM_OC3Init(TIM3, &TIM_OCInitStructure);
   \   0000006E   0xA901             ADD      R1,SP,#+4
   \   00000070   0x4620             MOV      R0,R4
   \   00000072   0x.... 0x....      BL       TIM_OC3Init
    111            
    112            /* Output Compare PWM Mode configuration: Channel4 */
    113            TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;                   
   \   00000076   0x2060             MOVS     R0,#+96
   \   00000078   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    114            TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
   \   0000007C   0x2001             MOVS     R0,#+1
   \   0000007E   0xF8AD 0x0006      STRH     R0,[SP, #+6]
    115            TIM_OCInitStructure.TIM_Pulse = 0x400; //Dummy value;    
   \   00000082   0xF8AD 0x500A      STRH     R5,[SP, #+10]
    116            TIM_OC4Init(TIM3, &TIM_OCInitStructure);
   \   00000086   0xA901             ADD      R1,SP,#+4
   \   00000088   0x4620             MOV      R0,R4
   \   0000008A   0x.... 0x....      BL       TIM_OC4Init
    117          
    118            TIM_OC1PreloadConfig(TIM3, TIM_OCPreload_Disable); 
   \   0000008E   0x2100             MOVS     R1,#+0
   \   00000090   0x4620             MOV      R0,R4
   \   00000092   0x.... 0x....      BL       TIM_OC1PreloadConfig
    119            
    120            /* Enable TIM3 counter */
    121            TIM_Cmd(TIM3, ENABLE);
   \   00000096   0x2101             MOVS     R1,#+1
   \   00000098   0x4620             MOV      R0,R4
   \   0000009A   0x.... 0x....      BL       TIM_Cmd
    122          }
   \   0000009E   0xB009             ADD      SP,SP,#+36
   \   000000A0   0xBD30             POP      {R4,R5,PC}       ;; return
    123          
    124          /*******************************************************************************
    125          * Function Name : MCDAC_Output
    126          * Description : provides a short description of the function
    127          * Input : details the input parameters.
    128          * Output : details the output parameters.
    129          * Return : details the return value.
    130          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    131          void MCDAC_Update_Output(void)
    132          {
   \                     MCDAC_Update_Output:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
    133              TIM_SetCompare3(TIM3, ((u16)((s16)((hMeasurementArray[OutputVar[bChannel_1_variable]]+32768)/32))));
   \   00000004   0x....             LDR.N    R4,??DataTable27_2
   \   00000006   0x7860             LDRB     R0,[R4, #+1]
   \   00000008   0x1900             ADDS     R0,R0,R4
   \   0000000A   0xF890 0x0090      LDRB     R0,[R0, #+144]
   \   0000000E   0xEB04 0x0040      ADD      R0,R4,R0, LSL #+1
   \   00000012   0xF9B0 0x0004      LDRSH    R0,[R0, #+4]
   \   00000016   0xF500 0x4000      ADD      R0,R0,#+32768
   \   0000001A   0x....             LDR.N    R5,??DataTable27_1  ;; 0x40000400
   \   0000001C   0x1101             ASRS     R1,R0,#+4
   \   0000001E   0xEB00 0x60D1      ADD      R0,R0,R1, LSR #+27
   \   00000022   0x02C1             LSLS     R1,R0,#+11
   \   00000024   0x0C09             LSRS     R1,R1,#+16
   \   00000026   0x4628             MOV      R0,R5
   \   00000028   0x.... 0x....      BL       TIM_SetCompare3
    134              TIM_SetCompare4(TIM3, ((u16)((s16)((hMeasurementArray[OutputVar[bChannel_2_variable]]+32768)/32))));
   \   0000002C   0x78A0             LDRB     R0,[R4, #+2]
   \   0000002E   0x1900             ADDS     R0,R0,R4
   \   00000030   0xF890 0x0090      LDRB     R0,[R0, #+144]
   \   00000034   0xEB04 0x0040      ADD      R0,R4,R0, LSL #+1
   \   00000038   0xF9B0 0x0004      LDRSH    R0,[R0, #+4]
   \   0000003C   0xF500 0x4000      ADD      R0,R0,#+32768
   \   00000040   0x1101             ASRS     R1,R0,#+4
   \   00000042   0xEB00 0x60D1      ADD      R0,R0,R1, LSR #+27
   \   00000046   0x02C1             LSLS     R1,R0,#+11
   \   00000048   0x0C09             LSRS     R1,R1,#+16
   \   0000004A   0x4628             MOV      R0,R5
   \   0000004C   0xB001             ADD      SP,SP,#+4
   \   0000004E   0xE8BD 0x4030      POP      {R4,R5,LR}
   \   00000052   0x.... 0x....      B.W      TIM_SetCompare4
    135          }
    136          
    137          /*******************************************************************************
    138          * Function Name : MCDAC_Send_Output_Value
    139          * Description : provides a short description of the function
    140          * Input : details the input parameters.
    141          * Output : details the output parameters.
    142          * Return : details the return value.
    143          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    144          void MCDAC_Update_Value(u8 bVariable, s16 hValue)
    145          {
    146            hMeasurementArray[bVariable] = hValue;
   \                     MCDAC_Update_Value:
   \   00000000   0x....             LDR.N    R2,??DataTable27_2
   \   00000002   0xEB02 0x0040      ADD      R0,R2,R0, LSL #+1
   \   00000006   0x8081             STRH     R1,[R0, #+4]
    147          }
   \   00000008   0x4770             BX       LR               ;; return
    148          
    149          /*******************************************************************************
    150          * Function Name : MCDAC_Output_Choice
    151          * Description : provides a short description of the function
    152          * Input : details the input parameters.
    153          * Output : details the output parameters.
    154          * Return : details the return value.
    155          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    156          void MCDAC_Output_Choice(s8 bStep, u8 bChannel)
    157          {
   \                     MCDAC_Output_Choice:
   \   00000000   0xB430             PUSH     {R4,R5}
    158            if (bChannel == DAC_CH1)
   \   00000002   0x....             LDR.N    R2,??DataTable27_2
   \   00000004   0x7853             LDRB     R3,[R2, #+1]
   \   00000006   0x7894             LDRB     R4,[R2, #+2]
   \   00000008   0x7815             LDRB     R5,[R2, #+0]
   \   0000000A   0x2901             CMP      R1,#+1
   \   0000000C   0xD10B             BNE.N    ??MCDAC_Output_Choice_0
    159            {
    160               bChannel_1_variable += bStep;
   \   0000000E   0x18C3             ADDS     R3,R0,R3
    161               if (bChannel_1_variable > max_out_var_num)
   \   00000010   0xB2DB             UXTB     R3,R3
   \   00000012   0x429D             CMP      R5,R3
   \   00000014   0xBF38             IT       CC 
   \   00000016   0x2301             MOVCC    R3,#+1
    162               {
    163                 bChannel_1_variable = 1;
   \   00000018   0xD30D             BCC.N    ??MCDAC_Output_Choice_1
    164               }
    165               else if (bChannel_1_variable == 0)
   \   0000001A   0xB963             CBNZ.N   R3,??MCDAC_Output_Choice_1
    166               {
    167                 bChannel_1_variable = max_out_var_num;
   \   0000001C   0x462B             MOV      R3,R5
   \   0000001E   0x7094             STRB     R4,[R2, #+2]
   \   00000020   0x7053             STRB     R3,[R2, #+1]
   \   00000022   0xBC30             POP      {R4,R5}
   \   00000024   0x4770             BX       LR
    168               }
    169            }
    170            else
    171            {
    172               bChannel_2_variable += bStep;
   \                     ??MCDAC_Output_Choice_0:
   \   00000026   0x1904             ADDS     R4,R0,R4
    173               if (bChannel_2_variable > max_out_var_num)
   \   00000028   0xB2E4             UXTB     R4,R4
   \   0000002A   0x42A5             CMP      R5,R4
   \   0000002C   0xBF38             IT       CC 
   \   0000002E   0x2401             MOVCC    R4,#+1
    174               {
    175                 bChannel_2_variable = 1;
   \   00000030   0xD301             BCC.N    ??MCDAC_Output_Choice_1
    176               }
    177               else if (bChannel_2_variable == 0)
   \   00000032   0xB904             CBNZ.N   R4,??MCDAC_Output_Choice_1
    178               {
    179                 bChannel_2_variable = max_out_var_num;
   \   00000034   0x462C             MOV      R4,R5
   \                     ??MCDAC_Output_Choice_1:
   \   00000036   0x7094             STRB     R4,[R2, #+2]
   \   00000038   0x7053             STRB     R3,[R2, #+1]
    180               }
    181            }
    182          }
   \   0000003A   0xBC30             POP      {R4,R5}
   \   0000003C   0x4770             BX       LR               ;; return
    183          
    184          /*******************************************************************************
    185          * Function Name : MCDAC_Output_Var_Name
    186          * Description : provides a short description of the function
    187          * Input : details the input parameters.
    188          * Output : details the output parameters.
    189          * Return : details the return value.
    190          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    191          u8 *MCDAC_Output_Var_Name(u8 bChannel)
    192          {
    193            u8 *temp;
    194            if (bChannel == DAC_CH1)
   \                     MCDAC_Output_Var_Name:
   \   00000000   0x....             LDR.N    R1,??DataTable27_2
   \   00000002   0x2801             CMP      R0,#+1
   \   00000004   0xBF0C             ITE      EQ 
   \   00000006   0x7848             LDRBEQ   R0,[R1, #+1]
   \   00000008   0x7888             LDRBNE   R0,[R1, #+2]
    195            {
    196              temp = OutputVariableNames[OutputVar[bChannel_1_variable]];
    197            }
    198            else
    199            {
    200              temp = OutputVariableNames[OutputVar[bChannel_2_variable]];
   \   0000000A   0x1840             ADDS     R0,R0,R1
   \   0000000C   0xF890 0x0090      LDRB     R0,[R0, #+144]
   \   00000010   0xEB01 0x0080      ADD      R0,R1,R0, LSL #+2
   \   00000014   0x6B40             LDR      R0,[R0, #+52]
    201            }
    202            return (temp);
   \   00000016   0x4770             BX       LR               ;; return
    203          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   0x40010C00         DC32     0x40010c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_1:
   \   00000000   0x40000400         DC32     0x40000400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_2:
   \   00000000   0x........         DC32     max_out_var_num

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "0                   ">`:
   \   00000000   0x30 0x20          DC8 "0                   "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Ia                  ">`:
   \   00000000   0x49 0x61          DC8 "Ia                  "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Ib                  ">`:
   \   00000000   0x49 0x62          DC8 "Ib                  "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Ialpha              ">`:
   \   00000000   0x49 0x61          DC8 "Ialpha              "
   \              0x6C 0x70    
   \              0x68 0x61    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Ibeta               ">`:
   \   00000000   0x49 0x62          DC8 "Ibeta               "
   \              0x65 0x74    
   \              0x61 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Iq                  ">`:
   \   00000000   0x49 0x71          DC8 "Iq                  "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Id                  ">`:
   \   00000000   0x49 0x64          DC8 "Id                  "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Iq ref              ">`:
   \   00000000   0x49 0x71          DC8 "Iq ref              "
   \              0x20 0x72    
   \              0x65 0x66    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Id ref              ">`:
   \   00000000   0x49 0x64          DC8 "Id ref              "
   \              0x20 0x72    
   \              0x65 0x66    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Vq                  ">`:
   \   00000000   0x56 0x71          DC8 "Vq                  "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Vd                  ">`:
   \   00000000   0x56 0x64          DC8 "Vd                  "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Valpha              ">`:
   \   00000000   0x56 0x61          DC8 "Valpha              "
   \              0x6C 0x70    
   \              0x68 0x61    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Vbeta               ">`:
   \   00000000   0x56 0x62          DC8 "Vbeta               "
   \              0x65 0x74    
   \              0x61 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Measured El Angle   ">`:
   \   00000000   0x4D 0x65          DC8 "Measured El Angle   "
   \              0x61 0x73    
   \              0x75 0x72    
   \              0x65 0x64    
   \              0x20 0x45    
   \              0x6C 0x20    
   \              0x41 0x6E    
   \              0x67 0x6C    
   \              0x65 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Measured Rotor Speed">`:
   \   00000000   0x4D 0x65          DC8 "Measured Rotor Speed"
   \              0x61 0x73    
   \              0x75 0x72    
   \              0x65 0x64    
   \              0x20 0x52    
   \              0x6F 0x74    
   \              0x6F 0x72    
   \              0x20 0x53    
   \              0x70 0x65    
   \              0x65 0x64    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Observed El Angle   ">`:
   \   00000000   0x4F 0x62          DC8 "Observed El Angle   "
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x64    
   \              0x20 0x45    
   \              0x6C 0x20    
   \              0x41 0x6E    
   \              0x67 0x6C    
   \              0x65 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Observed Rotor Speed">`:
   \   00000000   0x4F 0x62          DC8 "Observed Rotor Speed"
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x64    
   \              0x20 0x52    
   \              0x6F 0x74    
   \              0x6F 0x72    
   \              0x20 0x53    
   \              0x70 0x65    
   \              0x65 0x64    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Observed Ialpha     ">`:
   \   00000000   0x4F 0x62          DC8 "Observed Ialpha     "
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x64    
   \              0x20 0x49    
   \              0x61 0x6C    
   \              0x70 0x68    
   \              0x61 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Observed Ibeta      ">`:
   \   00000000   0x4F 0x62          DC8 "Observed Ibeta      "
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x64    
   \              0x20 0x49    
   \              0x62 0x65    
   \              0x74 0x61    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Observed B-emf alpha">`:
   \   00000000   0x4F 0x62          DC8 "Observed B-emf alpha"
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x64    
   \              0x20 0x42    
   \              0x2D 0x65    
   \              0x6D 0x66    
   \              0x20 0x61    
   \              0x6C 0x70    
   \              0x68 0x61    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Observed B-emf beta ">`:
   \   00000000   0x4F 0x62          DC8 "Observed B-emf beta "
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x64    
   \              0x20 0x42    
   \              0x2D 0x65    
   \              0x6D 0x66    
   \              0x20 0x62    
   \              0x65 0x74    
   \              0x61 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "User 1              ">`:
   \   00000000   0x55 0x73          DC8 "User 1              "
   \              0x65 0x72    
   \              0x20 0x31    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "User 2              ">`:
   \   00000000   0x55 0x73          DC8 "User 2              "
   \              0x65 0x72    
   \              0x20 0x32    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    204              
    205            
    206          
    207          /******************* (C) COPYRIGHT 2008 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       48  MCDAC_Init
             48 -> GPIO_Init
             48 -> GPIO_StructInit
             48 -> RCC_APB1PeriphClockCmd
             48 -> RCC_APB2PeriphClockCmd
             48 -> TIM_Cmd
             48 -> TIM_DeInit
             48 -> TIM_OC1PreloadConfig
             48 -> TIM_OC3Init
             48 -> TIM_OC4Init
             48 -> TIM_OCStructInit
             48 -> TIM_TimeBaseInit
             48 -> TIM_TimeBaseStructInit
        8  MCDAC_Output_Choice
        0  MCDAC_Output_Var_Name
       16  MCDAC_Update_Output
             16 -> TIM_SetCompare3
              0 -> TIM_SetCompare4
        0  MCDAC_Update_Value


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      24  ?<Constant "0                   ">
      24  ?<Constant "Ia                  ">
      24  ?<Constant "Ialpha              ">
      24  ?<Constant "Ib                  ">
      24  ?<Constant "Ibeta               ">
      24  ?<Constant "Id                  ">
      24  ?<Constant "Id ref              ">
      24  ?<Constant "Iq                  ">
      24  ?<Constant "Iq ref              ">
      24  ?<Constant "Measured El Angle   ">
      24  ?<Constant "Measured Rotor Speed">
      24  ?<Constant "Observed B-emf alpha">
      24  ?<Constant "Observed B-emf beta ">
      24  ?<Constant "Observed El Angle   ">
      24  ?<Constant "Observed Ialpha     ">
      24  ?<Constant "Observed Ibeta      ">
      24  ?<Constant "Observed Rotor Speed">
      24  ?<Constant "User 1              ">
      24  ?<Constant "User 2              ">
      24  ?<Constant "Valpha              ">
      24  ?<Constant "Vbeta               ">
      24  ?<Constant "Vd                  ">
      24  ?<Constant "Vq                  ">
       4  ??DataTable27
       4  ??DataTable27_1
       4  ??DataTable27_2
     162  MCDAC_Init
      62  MCDAC_Output_Choice
      24  MCDAC_Output_Var_Name
      86  MCDAC_Update_Output
      10  MCDAC_Update_Value
     168  max_out_var_num
          bChannel_1_variable
          bChannel_2_variable
          hMeasurementArray
          OutputVariableNames
          OutputVar

 
 168 bytes in section .data
 552 bytes in section .rodata
 356 bytes in section .text
 
 356 bytes of CODE  memory
 552 bytes of CONST memory
 168 bytes of DATA  memory

Errors: none
Warnings: 3
